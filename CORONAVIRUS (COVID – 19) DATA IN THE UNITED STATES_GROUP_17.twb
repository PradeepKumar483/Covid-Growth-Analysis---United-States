<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='us+' inline='true' name='federated.00ydst60ldotw0149e38613myu1b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='us' name='textscan.00kiqwi1bk52i91b5jwt80bdb1m1'>
            <connection class='textscan' directory='C:/Users/Pradeep Kumar/OneDrive/Documents/UNT Data Science/DSCI 5360 - Data Visualisation/Project' filename='us.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.00kiqwi1bk52i91b5jwt80bdb1m1' name='us-counties.csv' table='[us-counties#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='county' ordinal='1' />
            <column datatype='string' name='state' ordinal='2' />
            <column datatype='integer' name='fips' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.00kiqwi1bk52i91b5jwt80bdb1m1' name='us.csv' table='[us#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='integer' name='cases' ordinal='1' />
              <column datatype='integer' name='deaths' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.00kiqwi1bk52i91b5jwt80bdb1m1' name='us-states.csv' table='[us-states#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='string' name='state' ordinal='1' />
              <column datatype='integer' name='fips' ordinal='2' />
              <column datatype='integer' name='cases' ordinal='3' />
              <column datatype='integer' name='deaths' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.00kiqwi1bk52i91b5jwt80bdb1m1' name='us-counties.csv' table='[us-counties#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='string' name='county' ordinal='1' />
              <column datatype='string' name='state' ordinal='2' />
              <column datatype='integer' name='fips' ordinal='3' />
              <column datatype='integer' name='cases' ordinal='4' />
              <column datatype='integer' name='deaths' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[cases (us-counties.csv)]' value='[us-counties.csv].[cases]' />
          <map key='[cases (us-states.csv)]' value='[us-states.csv].[cases]' />
          <map key='[cases]' value='[us.csv].[cases]' />
          <map key='[county]' value='[us-counties.csv].[county]' />
          <map key='[date (us-counties.csv)]' value='[us-counties.csv].[date]' />
          <map key='[date (us-states.csv)]' value='[us-states.csv].[date]' />
          <map key='[date]' value='[us.csv].[date]' />
          <map key='[deaths (us-counties.csv)]' value='[us-counties.csv].[deaths]' />
          <map key='[deaths (us-states.csv)]' value='[us-states.csv].[deaths]' />
          <map key='[deaths]' value='[us.csv].[deaths]' />
          <map key='[fips (us-states.csv)]' value='[us-states.csv].[fips]' />
          <map key='[fips]' value='[us-counties.csv].[fips]' />
          <map key='[state (us-states.csv)]' value='[us-states.csv].[state]' />
          <map key='[state]' value='[us-counties.csv].[state]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us-states.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us-counties.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[us.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us.csv_6CB7DCFA3E864E92972D1C46ED0D33AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[us.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us.csv_6CB7DCFA3E864E92972D1C46ED0D33AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[us.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us.csv_6CB7DCFA3E864E92972D1C46ED0D33AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (us-states.csv)]</local-name>
            <parent-name>[us-states.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-states.csv_B74E1383F4A44074AF6AB11120B874D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (us-states.csv)]</local-name>
            <parent-name>[us-states.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-states.csv_B74E1383F4A44074AF6AB11120B874D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips (us-states.csv)]</local-name>
            <parent-name>[us-states.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-states.csv_B74E1383F4A44074AF6AB11120B874D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases (us-states.csv)]</local-name>
            <parent-name>[us-states.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-states.csv_B74E1383F4A44074AF6AB11120B874D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths (us-states.csv)]</local-name>
            <parent-name>[us-states.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-states.csv_B74E1383F4A44074AF6AB11120B874D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (us-counties.csv)]</local-name>
            <parent-name>[us-counties.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-counties.csv_DDD5FE5A5FC949919B317FB88089C151]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[us-counties.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-counties.csv_DDD5FE5A5FC949919B317FB88089C151]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[us-counties.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-counties.csv_DDD5FE5A5FC949919B317FB88089C151]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[us-counties.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-counties.csv_DDD5FE5A5FC949919B317FB88089C151]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases (us-counties.csv)]</local-name>
            <parent-name>[us-counties.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-counties.csv_DDD5FE5A5FC949919B317FB88089C151]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths (us-counties.csv)]</local-name>
            <parent-name>[us-counties.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-counties.csv_DDD5FE5A5FC949919B317FB88089C151]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='us-counties.csv' datatype='table' name='[__tableau_internal_object_id__].[us-counties.csv_DDD5FE5A5FC949919B317FB88089C151]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us-states.csv' datatype='table' name='[__tableau_internal_object_id__].[us-states.csv_B74E1383F4A44074AF6AB11120B874D5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us.csv' datatype='table' name='[__tableau_internal_object_id__].[us.csv_6CB7DCFA3E864E92972D1C46ED0D33AF]' role='measure' type='quantitative' />
      <column caption='Cases (Us-Counties.Csv)' datatype='integer' name='[cases (us-counties.csv)]' role='measure' type='quantitative' />
      <column caption='Cases (Us-States.Csv)' datatype='integer' name='[cases (us-states.csv)]' role='measure' type='quantitative' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Date (Us-Counties.Csv)' datatype='date' name='[date (us-counties.csv)]' role='dimension' type='ordinal' />
      <column caption='Date (Us-States.Csv)' datatype='date' name='[date (us-states.csv)]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Deaths (Us-Counties.Csv)' datatype='integer' name='[deaths (us-counties.csv)]' role='measure' type='quantitative' />
      <column caption='Deaths (Us-States.Csv)' datatype='integer' name='[deaths (us-states.csv)]' role='measure' type='quantitative' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='Fips (Us-States.Csv)' datatype='integer' name='[fips (us-states.csv)]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[fips]' role='measure' type='quantitative' />
      <column caption='State (Us-States.Csv)' datatype='string' name='[state (us-states.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[cases (us-states.csv)]' derivation='Avg' name='[avg:cases (us-states.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths (us-states.csv)]' derivation='Avg' name='[avg:deaths (us-states.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Count' name='[cnt:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Count' name='[cnt:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='None' name='[none:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
      <column-instance column='[state (us-states.csv)]' derivation='None' name='[none:state (us-states.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00ydst60ldotw0149e38613myu1b].[cnt:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00ydst60ldotw0149e38613myu1b].[none:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00ydst60ldotw0149e38613myu1b].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.00ydst60ldotw0149e38613myu1b].[avg:deaths (us-states.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.00ydst60ldotw0149e38613myu1b].[avg:cases (us-states.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00ydst60ldotw0149e38613myu1b].[cnt:deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00ydst60ldotw0149e38613myu1b].[sum:deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:county:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontonagon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state (us-states.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='us-counties.csv' id='us-counties.csv_DDD5FE5A5FC949919B317FB88089C151'>
            <properties context=''>
              <relation connection='textscan.00kiqwi1bk52i91b5jwt80bdb1m1' name='us-counties.csv' table='[us-counties#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='county' ordinal='1' />
                  <column datatype='string' name='state' ordinal='2' />
                  <column datatype='integer' name='fips' ordinal='3' />
                  <column datatype='integer' name='cases' ordinal='4' />
                  <column datatype='integer' name='deaths' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us-states.csv' id='us-states.csv_B74E1383F4A44074AF6AB11120B874D5'>
            <properties context=''>
              <relation connection='textscan.00kiqwi1bk52i91b5jwt80bdb1m1' name='us-states.csv' table='[us-states#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='fips' ordinal='2' />
                  <column datatype='integer' name='cases' ordinal='3' />
                  <column datatype='integer' name='deaths' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us.csv' id='us.csv_6CB7DCFA3E864E92972D1C46ED0D33AF'>
            <properties context=''>
              <relation connection='textscan.00kiqwi1bk52i91b5jwt80bdb1m1' name='us.csv' table='[us#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='integer' name='cases' ordinal='1' />
                  <column datatype='integer' name='deaths' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[date (us-states.csv)]' />
              <expression op='[date (us-counties.csv)]' />
            </expression>
            <first-end-point object-id='us-states.csv_B74E1383F4A44074AF6AB11120B874D5' />
            <second-end-point object-id='us-counties.csv_DDD5FE5A5FC949919B317FB88089C151' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[date]' />
              <expression op='[date (us-states.csv)]' />
            </expression>
            <first-end-point object-id='us.csv_6CB7DCFA3E864E92972D1C46ED0D33AF' />
            <second-end-point object-id='us-states.csv_B74E1383F4A44074AF6AB11120B874D5' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.00ydst60ldotw0149e38613myu1b'>
      <datasources>
        <datasource caption='us+' name='federated.00ydst60ldotw0149e38613myu1b' />
      </datasources>
      <datasource-dependencies datasource='federated.00ydst60ldotw0149e38613myu1b'>
        <column-instance column='[state (us-states.csv)]' derivation='None' name='[none:state (us-states.csv):nk]' pivot='key' type='nominal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='State (Us-States.Csv)' datatype='string' name='[state (us-states.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]'>
        <groupfilter function='level-members' level='[none:state (us-states.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' />
      </filter>
      <filter class='categorical' column='[federated.00ydst60ldotw0149e38613myu1b].[none:state:nk]'>
        <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.00ydst60ldotw0149e38613myu1b].[none:state:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Avg Cases and Deaths of US Counties '>
      <table>
        <view>
          <datasources>
            <datasource caption='us+' name='federated.00ydst60ldotw0149e38613myu1b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00ydst60ldotw0149e38613myu1b'>
            <column-instance column='[cases (us-states.csv)]' derivation='Avg' name='[avg:cases (us-states.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths (us-states.csv)]' derivation='Avg' name='[avg:deaths (us-states.csv):qk]' pivot='key' type='quantitative' />
            <column caption='Cases (Us-States.Csv)' datatype='integer' name='[cases (us-states.csv)]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Deaths (Us-States.Csv)' datatype='integer' name='[deaths (us-states.csv)]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[state (us-states.csv)]' derivation='None' name='[none:state (us-states.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State (Us-States.Csv)' datatype='string' name='[state (us-states.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00ydst60ldotw0149e38613myu1b].[avg:cases (us-states.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00ydst60ldotw0149e38613myu1b].[avg:deaths (us-states.csv):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]</column>
            <column>[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]</column>
            <column>[federated.00ydst60ldotw0149e38613myu1b].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00ydst60ldotw0149e38613myu1b].[Multiple Values]</rows>
        <cols>[federated.00ydst60ldotw0149e38613myu1b].[none:county:nk]</cols>
      </table>
      <simple-id uuid='{DEB53BAC-57DB-4488-9A0A-439F5CE4C59D}' />
    </worksheet>
    <worksheet name='Avg Cases and Deaths of US States'>
      <table>
        <view>
          <datasources>
            <datasource caption='us+' name='federated.00ydst60ldotw0149e38613myu1b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00ydst60ldotw0149e38613myu1b'>
            <column-instance column='[cases (us-states.csv)]' derivation='Avg' name='[avg:cases (us-states.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths (us-states.csv)]' derivation='Avg' name='[avg:deaths (us-states.csv):qk]' pivot='key' type='quantitative' />
            <column caption='Cases (Us-States.Csv)' datatype='integer' name='[cases (us-states.csv)]' role='measure' type='quantitative' />
            <column caption='Deaths (Us-States.Csv)' datatype='integer' name='[deaths (us-states.csv)]' role='measure' type='quantitative' />
            <column-instance column='[state (us-states.csv)]' derivation='None' name='[none:state (us-states.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State (Us-States.Csv)' datatype='string' name='[state (us-states.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases (us-states.csv)]' derivation='Sum' name='[sum:cases (us-states.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths (us-states.csv)]' derivation='Sum' name='[sum:deaths (us-states.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]</column>
            <column>[federated.00ydst60ldotw0149e38613myu1b].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00ydst60ldotw0149e38613myu1b].[sum:deaths (us-states.csv):qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.00ydst60ldotw0149e38613myu1b].[sum:cases (us-states.csv):qk]' palette='purple_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.00ydst60ldotw0149e38613myu1b].[avg:cases (us-states.csv):qk]' num-steps='6' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.00ydst60ldotw0149e38613myu1b].[avg:deaths (us-states.csv):qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.00ydst60ldotw0149e38613myu1b].[sum:cases (us-states.csv):qk]' />
              <color column='[federated.00ydst60ldotw0149e38613myu1b].[sum:cases (us-states.csv):qk]' />
              <tooltip column='[federated.00ydst60ldotw0149e38613myu1b].[sum:deaths (us-states.csv):qk]' />
              <text column='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' />
              <text column='[federated.00ydst60ldotw0149e38613myu1b].[avg:cases (us-states.csv):qk]' />
              <text column='[federated.00ydst60ldotw0149e38613myu1b].[avg:deaths (us-states.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{18F5D7C2-48BF-4E4E-AC4E-D7795437EB96}' />
    </worksheet>
    <worksheet name='Cases and Deaths of US Counties per day'>
      <table>
        <view>
          <datasources>
            <datasource caption='us+' name='federated.00ydst60ldotw0149e38613myu1b' />
          </datasources>
          <datasource-dependencies datasource='federated.00ydst60ldotw0149e38613myu1b'>
            <column caption='Cases (Us-Counties.Csv)' datatype='integer' name='[cases (us-counties.csv)]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Date (Us-Counties.Csv)' datatype='date' name='[date (us-counties.csv)]' role='dimension' type='ordinal' />
            <column caption='Deaths (Us-Counties.Csv)' datatype='integer' name='[deaths (us-counties.csv)]' role='measure' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[state (us-states.csv)]' derivation='None' name='[none:state (us-states.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State (Us-States.Csv)' datatype='string' name='[state (us-states.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases (us-counties.csv)]' derivation='Sum' name='[sum:cases (us-counties.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths (us-counties.csv)]' derivation='Sum' name='[sum:deaths (us-counties.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (us-counties.csv)]' derivation='Day-Trunc' name='[tdy:date (us-counties.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.00ydst60ldotw0149e38613myu1b].[none:state:nk]</column>
            <column>[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ydst60ldotw0149e38613myu1b].[none:county:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00ydst60ldotw0149e38613myu1b].[sum:cases (us-counties.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ydst60ldotw0149e38613myu1b].[none:county:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00ydst60ldotw0149e38613myu1b].[sum:deaths (us-counties.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ydst60ldotw0149e38613myu1b].[none:county:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.00ydst60ldotw0149e38613myu1b].[sum:cases (us-counties.csv):qk] + [federated.00ydst60ldotw0149e38613myu1b].[sum:deaths (us-counties.csv):qk])</rows>
        <cols>[federated.00ydst60ldotw0149e38613myu1b].[tdy:date (us-counties.csv):qk]</cols>
      </table>
      <simple-id uuid='{E75C62E1-36D8-418D-80BF-BB1A6A03563A}' />
    </worksheet>
    <worksheet name='Cases and Deaths of US States per day'>
      <table>
        <view>
          <datasources>
            <datasource caption='us+' name='federated.00ydst60ldotw0149e38613myu1b' />
          </datasources>
          <datasource-dependencies datasource='federated.00ydst60ldotw0149e38613myu1b'>
            <column caption='Cases (Us-States.Csv)' datatype='integer' name='[cases (us-states.csv)]' role='measure' type='quantitative' />
            <column caption='Date (Us-States.Csv)' datatype='date' name='[date (us-states.csv)]' role='dimension' type='ordinal' />
            <column caption='Deaths (Us-States.Csv)' datatype='integer' name='[deaths (us-states.csv)]' role='measure' type='quantitative' />
            <column-instance column='[date (us-states.csv)]' derivation='Day' name='[dy:date (us-states.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[date (us-states.csv)]' derivation='Month' name='[mn:date (us-states.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[state (us-states.csv)]' derivation='None' name='[none:state (us-states.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[date (us-states.csv)]' derivation='Quarter' name='[qr:date (us-states.csv):ok]' pivot='key' type='ordinal' />
            <column caption='State (Us-States.Csv)' datatype='string' name='[state (us-states.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases (us-states.csv)]' derivation='Sum' name='[sum:cases (us-states.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths (us-states.csv)]' derivation='Sum' name='[sum:deaths (us-states.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[date (us-states.csv)]' derivation='Year' name='[yr:date (us-states.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]</column>
            <column>[federated.00ydst60ldotw0149e38613myu1b].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' />
              <lod column='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00ydst60ldotw0149e38613myu1b].[sum:cases (us-states.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' />
              <lod column='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00ydst60ldotw0149e38613myu1b].[sum:deaths (us-states.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' />
              <lod column='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.00ydst60ldotw0149e38613myu1b].[sum:cases (us-states.csv):qk] + [federated.00ydst60ldotw0149e38613myu1b].[sum:deaths (us-states.csv):qk])</rows>
        <cols>([federated.00ydst60ldotw0149e38613myu1b].[yr:date (us-states.csv):ok] / ([federated.00ydst60ldotw0149e38613myu1b].[qr:date (us-states.csv):ok] / ([federated.00ydst60ldotw0149e38613myu1b].[mn:date (us-states.csv):ok] / [federated.00ydst60ldotw0149e38613myu1b].[dy:date (us-states.csv):ok])))</cols>
      </table>
      <simple-id uuid='{F3DBEBE3-5345-48C7-B2EE-79A121A85EA4}' />
    </worksheet>
    <worksheet name='Cases and Deaths of US per day'>
      <table>
        <view>
          <datasources>
            <datasource caption='us+' name='federated.00ydst60ldotw0149e38613myu1b' />
          </datasources>
          <datasource-dependencies datasource='federated.00ydst60ldotw0149e38613myu1b'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[state (us-states.csv)]' derivation='None' name='[none:state (us-states.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State (Us-States.Csv)' datatype='string' name='[state (us-states.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]</column>
            <column>[federated.00ydst60ldotw0149e38613myu1b].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00ydst60ldotw0149e38613myu1b].[sum:deaths:qk]' field-type='quantitative' fold='true' max='134845' min='0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.00ydst60ldotw0149e38613myu1b].[sum:cases:qk]' field-type='quantitative' max='734845' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00ydst60ldotw0149e38613myu1b].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00ydst60ldotw0149e38613myu1b].[sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.00ydst60ldotw0149e38613myu1b].[sum:cases:qk] + [federated.00ydst60ldotw0149e38613myu1b].[sum:deaths:qk])</rows>
        <cols>[federated.00ydst60ldotw0149e38613myu1b].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{D587669F-FACE-499C-9482-19343A098E61}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Avg records of US States and Counties per day'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='us+' name='federated.00ydst60ldotw0149e38613myu1b' />
      </datasources>
      <datasource-dependencies datasource='federated.00ydst60ldotw0149e38613myu1b'>
        <column-instance column='[state (us-states.csv)]' derivation='None' name='[none:state (us-states.csv):nk]' pivot='key' type='nominal' />
        <column caption='State (Us-States.Csv)' datatype='string' name='[state (us-states.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='13' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5250' id='14' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='6250'>
              <zone h='92750' id='5' type-v2='layout-basic' w='82400' x='800' y='6250' />
              <zone fixed-size='160' h='92750' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='6250'>
                <zone h='76375' id='8' name='Avg Cases and Deaths of US States' param='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' type-v2='filter' w='16000' x='83200' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Avg Cases and Deaths of US States' pane-specification-id='0' param='[federated.00ydst60ldotw0149e38613myu1b].[sum:cases (us-states.csv):qk]' type-v2='color' w='16000' x='83200' y='82625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8250' id='11' name='Avg Cases and Deaths of US Counties ' pane-specification-id='0' param='[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]' type-v2='color' w='16000' x='83200' y='90750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='42375' id='3' name='Avg Cases and Deaths of US States' w='48800' x='3900' y='6625' />
        <zone h='51500' id='10' name='Avg Cases and Deaths of US Counties ' w='80600' x='3000' y='48375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='25' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5250' id='14' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='76375' id='8' mode='checkdropdown' name='Avg Cases and Deaths of US States' param='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' type-v2='filter' w='16000' x='83200' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42375' id='3' is-fixed='true' name='Avg Cases and Deaths of US States' w='48800' x='3900' y='6625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Avg Cases and Deaths of US States' pane-specification-id='0' param='[federated.00ydst60ldotw0149e38613myu1b].[sum:cases (us-states.csv):qk]' type-v2='color' w='16000' x='83200' y='82625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51500' id='10' is-fixed='true' name='Avg Cases and Deaths of US Counties ' w='80600' x='3000' y='48375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='11' name='Avg Cases and Deaths of US Counties ' pane-specification-id='0' param='[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]' type-v2='color' w='16000' x='83200' y='90750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5E721F67-2977-4735-9C7F-DB74CAD4486A}' />
    </dashboard>
    <dashboard name='CORONAVIRUS (COVID – 19) DATA IN THE UNITED STATES' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='New York records highest cases as well as deaths.' captured-sheet='Cases and Deaths of US States per day' id='2' />
                  <story-point caption='700K cases and 33K deaths across US' captured-sheet='Cases and Deaths of US per day' id='3' />
                  <story-point caption='Alcona and Abbeville recording the least spread.' captured-sheet='Cases and Deaths of US Counties per day' id='4' />
                  <story-point caption='Northern Marina Islands on average found out be least spread of virus.' captured-sheet='Avg Cases and Deaths of US States' id='5' />
                  <story-point caption='12.5K cases recorded in Aitkin, Chase, Red Willow, Woods and Zavala' captured-sheet='Avg Cases and Deaths of US Counties ' id='6' />
                  <story-point caption='Records of US States and Counties ' captured-sheet='Records of US States and Counties per day' id='7' />
                  <story-point caption='Average records of US States and Counties' captured-sheet='Avg records of US States and Counties per day' id='8' />
                  <story-point caption='Records of US cases and deaths on a whole.' captured-sheet='Records of US cases and deaths per day' id='9' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{BFE07011-C6BA-4C54-9AE8-C7B395A2DD9A}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Records of US States and Counties per day'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='us+' name='federated.00ydst60ldotw0149e38613myu1b' />
      </datasources>
      <datasource-dependencies datasource='federated.00ydst60ldotw0149e38613myu1b'>
        <column-instance column='[state (us-states.csv)]' derivation='None' name='[none:state (us-states.csv):nk]' pivot='key' type='nominal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='State (Us-States.Csv)' datatype='string' name='[state (us-states.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='14' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5250' id='15' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='6250'>
              <zone h='92750' id='5' type-v2='layout-basic' w='82400' x='800' y='6250' />
              <zone fixed-size='160' h='92750' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='6250'>
                <zone h='23187' id='8' name='Cases and Deaths of US States per day' param='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' type-v2='filter' w='16000' x='83200' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='23187' id='9' name='Cases and Deaths of US States per day' pane-specification-id='1' param='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' type-v2='color' w='16000' x='83200' y='29437'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='23187' id='11' name='Cases and Deaths of US Counties per day' param='[federated.00ydst60ldotw0149e38613myu1b].[none:state:nk]' type-v2='filter' values='cascading' w='16000' x='83200' y='52624'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='23189' id='12' name='Cases and Deaths of US Counties per day' pane-specification-id='1' param='[federated.00ydst60ldotw0149e38613myu1b].[none:county:nk]' type-v2='color' w='16000' x='83200' y='75811'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='50125' id='3' name='Cases and Deaths of US States per day' w='79700' x='3200' y='6375' />
        <zone h='43000' id='10' name='Cases and Deaths of US Counties per day' w='80400' x='2700' y='55875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='26' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5250' id='15' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23187' id='8' mode='checkdropdown' name='Cases and Deaths of US States per day' param='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' type-v2='filter' w='16000' x='83200' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50125' id='3' is-fixed='true' name='Cases and Deaths of US States per day' w='79700' x='3200' y='6375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23187' id='9' name='Cases and Deaths of US States per day' pane-specification-id='1' param='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' type-v2='color' w='16000' x='83200' y='29437'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23187' id='11' mode='checkdropdown' name='Cases and Deaths of US Counties per day' param='[federated.00ydst60ldotw0149e38613myu1b].[none:state:nk]' type-v2='filter' values='cascading' w='16000' x='83200' y='52624'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43000' id='10' is-fixed='true' name='Cases and Deaths of US Counties per day' w='80400' x='2700' y='55875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23189' id='12' name='Cases and Deaths of US Counties per day' pane-specification-id='1' param='[federated.00ydst60ldotw0149e38613myu1b].[none:county:nk]' type-v2='color' w='16000' x='83200' y='75811'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DACC73E3-9661-494C-8007-13AC2768CC83}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Records of US cases and deaths per day'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='10' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5250' id='11' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='6250'>
              <zone h='92750' id='5' type-v2='layout-basic' w='82400' x='800' y='6250'>
                <zone h='92750' id='3' name='Cases and Deaths of US per day' w='82400' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='92750' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='6250'>
                <zone h='8250' id='8' name='Cases and Deaths of US per day' pane-specification-id='1' param='[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]' type-v2='color' w='16000' x='83200' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='22' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5250' id='11' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92750' id='3' is-fixed='true' name='Cases and Deaths of US per day' w='82400' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='8' name='Cases and Deaths of US per day' pane-specification-id='1' param='[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]' type-v2='color' w='16000' x='83200' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{587407E0-8A66-487A-B542-8018CC28FD94}' />
    </dashboard>
  </dashboards>
  <windows source-height='37'>
    <window class='worksheet' maximized='true' name='Cases and Deaths of US States per day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[yr:date (us-states.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC02A506-DD00-43F3-8E75-137EB49003D7}' />
    </window>
    <window class='worksheet' name='Cases and Deaths of US per day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[dy:date:ok]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[dy:date:qk]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[qr:date:ok]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[tdy:date:ok]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[tdy:date:qk]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[tmn:date:ok]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA8B9AC8-8156-4A32-A156-FF2F0E3F8F92}' />
    </window>
    <window class='worksheet' name='Cases and Deaths of US Counties per day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.00ydst60ldotw0149e38613myu1b].[none:state:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.00ydst60ldotw0149e38613myu1b].[none:county:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[mn:date (us-counties.csv):ok]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[none:county:nk]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[qr:date (us-counties.csv):ok]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[yr:date (us-counties.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C034EB53-D72E-457C-9736-FCC4A8416987}' />
    </window>
    <window class='worksheet' name='Avg Cases and Deaths of US States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.00ydst60ldotw0149e38613myu1b].[sum:cases (us-states.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[sum:cases (us-states.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99999E19-8D3D-44DC-BADA-16BB9C2F2849}' />
    </window>
    <window class='worksheet' name='Avg Cases and Deaths of US Counties '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[none:county:nk]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]</field>
            <field>[federated.00ydst60ldotw0149e38613myu1b].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E0B66BC-2F38-412B-86FE-22D48301B166}' />
    </window>
    <window class='dashboard' name='Records of US States and Counties per day'>
      <viewpoints>
        <viewpoint name='Cases and Deaths of US Counties per day'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.00ydst60ldotw0149e38613myu1b].[none:county:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Cases and Deaths of US States per day'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.00ydst60ldotw0149e38613myu1b].[none:state (us-states.csv):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2D09201B-C8DD-4615-8D02-FDF4DE83FFDE}' />
    </window>
    <window class='dashboard' name='Avg records of US States and Counties per day'>
      <viewpoints>
        <viewpoint name='Avg Cases and Deaths of US Counties '>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Avg Cases and Deaths of US States' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9AE6E554-899E-43C6-9792-D822E9A70908}' />
    </window>
    <window class='dashboard' name='Records of US cases and deaths per day'>
      <viewpoints>
        <viewpoint name='Cases and Deaths of US per day'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.00ydst60ldotw0149e38613myu1b].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1460BCF6-5BC9-4C47-9B43-EE5A655CA30C}' />
    </window>
    <window class='dashboard' name='CORONAVIRUS (COVID – 19) DATA IN THE UNITED STATES'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{93207D93-2CD6-4C0D-BC4E-AABD472D6D64}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg Cases and Deaths of US Counties ' width='192'>
      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
      Z6z5/3PkOGb7/mqSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg Cases and Deaths of US States' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Avg records of US States and Counties per day' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='CORONAVIRUS (COVID – 19) DATA IN THE UNITED STATES' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cases and Deaths of US Counties per day' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cases and Deaths of US States per day' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cases and Deaths of US per day' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Records of US States and Counties per day' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2913NdSZrg9zvmeoNr4D3oABJFA7JoitXdZbune7p77GpXPavRzsRqV7uK
      DSkUitCTHvpv0NOG9kWxipjVzs5Oj9pNT/ewPItk0VtYwtuLi+vdsamHC4IA7QUIFMnC+THA
      e2+ePJn5nZPfSXMyv08SQggcHHYp8ssugIPDy8RRAIddjaMADrsaRwEcdjWPKcC5f/glV65c
      4aNPz2O/QMIff3yupni/+cXPGJ+eB+DaxQvoq+EXLl4kl5jhs/OXuHjxAulC9cj85AgXLn3F
      hS8vULZgYmL8iemOPyV8K3x87qEs6cVpPj9/ga+u3MDaRBrry3nr1s1tK9t6ar3mDg9RHw2o
      WBIfvPkmNz7+FfNFsBaGWFhO03vkBD47z427Y8Sb26j3wcjUPLHGNjrqJKbTJqOj93n3zBvc
      Hppgai4BwuTKpcvYsoeBU8dxAcmFKcZnlog3dxBWDe5Pz3HgaDXvdCq1pnSplRQ30gkOvvsD
      GnyutfJdu3GH7/74j/EoEvn0MufOnePEaY2+rkZuD48jZDdv7Gvn3LlzpE+WOf7Gfq5cuYbi
      C3P8yEFuXLmEbsscHjiFzwXzU/eZW04RijTSHXdxeXgel61x4OhJXFqKu6MzzCwm1/L/8upt
      fvjDH1Z/CJNrl6+i4+LkyeNMT47T07OHkZFRWqMebk4kkYwSbxw9xrlz5xgYSNN3eACv14+w
      9HXl6uPaV5cwcXH0zTfxyHD35lV0W0J2Bznaf4Ch29dJFwxOnDrJ5PgomfkJmg+9TWdDkPmp
      MeaXs6xkS2iFDDfvjWJJKicP9zA2V6RvbxuDg4McPHhwp+rRa8tjLUAxm+TXv/wFK2qcNl+J
      2yPznDlzkouffcJHn13g5OnT7Otq48urtzh96hSTw7cpZhb41ceXeO+97/DJ55c4ffoUXW2N
      WPklhufzHBs4uqZpl67d5dSpU4wO3qShtZPunh72dLY+sXBvf/Ahg5c+59xHn1A2q7O1H374
      Pl9++hEff3YBf6SBvXv3MHD4IN5QlFjIx/i1SxS9cfbs3cOJo/1c+vQjug+fIKwvMbK4zN3h
      eQ4fG8C7WqCG5hbcisLFi5eoZBawA82cPtbD9RtjfPblFU6fPklHc/26Uklr325+8QmNfccY
      6K3ns4v3mJycAGB0dJTC8gxqrIszB1u5PLzM3r17OHHiBAG3zOjo6MZyzcxxb2KFIwPHcK8m
      PzGzyMDAcQqzY8zPDTNfCXLy2B4++fwyFz79BwKtB+lsCAI6126P8+abJ4jX+XEH6qiPBFi4
      e5F5vY67Ny5SSU0xmSi/UEX5pvKYAgTq6nnn7TdJLCWxhWB+epyr126y50Avkiyvu/1VHrxG
      OPXWt/G7FZAkJMC2BVKgmT/5vTN8+uu/YS5rPPG89UQCLlJ5HWGWkVQvplD5zrvvc6a3nvM3
      q5VLcvt47/0P6PAVGFosYdnVdM5/9FtCzT0c2teFLar5A9imxp0b18kSpN4b4E/+5Pe4/umv
      GZzLAvCbv/8NBw8fozleB4CqqEiyjAxIq7KsL6tk6WiW2BD24LtlV9sve/VTVRRkWVoNE6yX
      eH254qEYf/rjd7n4u58xnqxWVEmqnmchoWAxPjrIzXtT9O7vpr51D/37Ox+khCTJa3lc/eR3
      KPEO+nu7sWyJ/vYo/9fffMq3zw48dr0dQPnpT3/600cDW9q66W7wMZEwONBVT1kzCIYjHOnt
      4ur1O2gW9HY2ceveEK1d+6mPhFB9IeoCburDXm7cHUFSvbQ31nHzzhDuYD0H9rQjSxALubkz
      OEJHTy+xuhAA8Xi8mm9nJyM3rzEzt8Sps2cppRe5fW+E5QK8deIQsgSJ2UmGRsfR3TGO7GvD
      JXTuzy1zcF8XI6PjmEKmvauTkGIxPL3I6dMnSSwsgCTT3NzAvTt3wR2k78AeXLKES7aZmp7F
      G4zQ1tK4Jgeym57WOm4P3Ud2e+lsr7ZSPV3tXL9+g/nFFQbOnOL+revMrWicPX0E2awwMT2H
      2xemo60Zt7+OkE8F1cuB9hjXbg8Sa2jBpUgcPX58rVyNjXEG7w2ieKP07etEkSXu3LxKuVIh
      0tJNd/d+PHYBwxJE4g2EAt61awYqsl1kYnoefyhKX28PoyNjGLZEW2c3HV3t3LszyOkTR76W
      CvW6ITlvgl9NLly8yFtnzrxwOrcuf0Zdx1G6muu2oVTfPBwFcNjVOO8BHHY1jgI47GocBXDY
      1TgK4LCrea4C5JbnOH/hEvdGJrY144mrF1isVL//+hd/y6WL55mcSz41/uzMNAAXLp6vIXWD
      X/3d35HOl9FTU9yeSgE616/f5u6Ny1y+cpmZxRUABm9d4/KVy0zNJZidnnlqvtvB1QsXqWxb
      ag7bwWNLIR7l6t1R3nv3XQAWZsaZXVgk1rKP5al7uMON9HVEuXJvikAoTFgxyFQM9vceJhL0
      MDZ0h8XFBP2nz/LVR+fweFwc/8773L54nuz8HMf73wLAE4xy+szbfPzJJ9j5epK5AvGWHlQt
      zcLiIs09B/n844946zsfkl1JcO3KJXyRVrKL93GHGzl+5BBGKc2XV+4hudz0dQVZWC4BYOtF
      ckUPYJPJ5EDPcGDgLG2NUQASiSX2vHGSjuYI/+n//isOnTxNe32AiZl5fHX13Ln0GQeOnibm
      hcV0lmhjJ/nFcWx3mOPHj6DoKX75uxsEfDKnz5zg8uUbuP1BWr1u5s0SffveIOKDz89fZn5u
      if5TA1y9dpuSKYh7JboPn2Dk9g2ODTgvql4Gz+8CrZskTa2kkBQPU5Oj+LxeCtks124P4vG6
      WJxfwOfzYekahWK18qVSKyhGhvHFDHWxZvpaAyxMjKK29HNwf88TsxseG0FRXMzPzrCSSuFS
      DGYXS+zfv5993e3UxRs5/uZpMsnptTKYAsZv3qP/rbdpwkBubGHvnl6iIR+yrCCEDQgkZN77
      vd9HS81w/vItAN758PtYuSU+v3ibnv37OdrfSyqVAhRmJmbo2rufgcMHGRwZQVVcLMzO4PN5
      qRSy6KYAWyfe3MNAT4hPPrlASfaxuLhAPpeiu2+AaMhHYvQ6Lf1n2d/TgVbMUNQtpqYnOdDb
      zaUvz5MrOzPRL4vnKsDx/r18/mW1C6TpGoqiUlcXRlEVTEPn0ME+DMOks6sLSVFQFIlKRQcE
      mqbj9ocJet2Ew0HcgTDhlh6KUzeZSqRxr+auFdJ8dekCe3uP0Lv/ALYQdHV1oWkaqttPXdCL
      R5UYm5wjHA4DEA4/LIMlYM/RQ9y9cJ4ELuKqSiQaBMDdsBcpOcLFL76ib+AYg7dvkC5o1Mdj
      AAzfvUUyV6I+HqM+6ufG3RE0TUdRFOoidTRGw1y9PcjBAwewbUFXdxeyoiJMA92qVtyJ0UFu
      Tld4/91TBNDp6OwiFI5X3wID9T39TN38gkQ6jzB0LBtisRiqv57s3H0OHz+63ffVoUacF2Ev
      ip7i7oRGf2/Lpk8tZle4PTrDmTeP7UDBHGrBUQCHXY0zDeqwq9lxBdA0baezcHDYMjuuALqu
      Pz+SwyYQ5AuFbU0xl8tta3qvE899D+Dw9fObn/8dluLj2NE+LGRuXb/F6VPH0XHjszJMJTIo
      vhjF5DzRWIx9B/r44tyvibfvZer+GAPHj6JbEndv3uDMW6coVGwkLUe0pZvkxB3mChI9LVFs
      2U20LsTs+Cjxnn6a6rwvW/SvnR0fBOfzeUKh0E5m8Y3jwvkLCK1IRVFJZQu0xGOkl+aItu2l
      OaDjjraxsJwhtzSLbkJ7zx6iATdXbg9RHwkT9MDwVIK25ka03DJSqAGPnqfpwHFKs8M0HzrB
      9N0rCEVmZGyBd94+TF7EONTT+LJF/9pxFOAVZGZ8BDkQRzEKWGoAoeXxeL3kNUFzWGE8UcEv
      VWhobWd6cpreg32kFqbR5AAuq4QhwJJceDFQPV5WciUUo0QwWk9dJMzUxBQ+t4w/2oxZKZBJ
      zNPWe5Swd/d1CBwFcNjVONOgDrua3dfmfcNYmJ1iJZvHMk2C4Qh6Po2leDEMjb7+I/hczjPu
      WTgK8JojKwrdne0kMyVMrUgg1oQqTITkx7QEuJ6fxm7GeTy85limSTqvEXBLtLS0UCnmCURi
      SKqPkFd52cV75XEGwQ6vDZqm4fF4tjVNpwVweG3YiWU1zhjgJTM2fI9SxaSltZ6y4aaztf75
      JzlsianxUXK5IvWtrczNzjNw7KjTArxsJNVDQyRAoC6OW3Vux05iIdPaGEG3BF3dPSiy5CjA
      y6a1qZ6ipVLKpCgWCzibM3aOzrYWVooWIZdEKpXCFuL1HgTvxKDoVWa3yfsouVxubUvsdvFa
      twC7ba/BbpP36+DlDYKFzfziAlrFpKkxxkqmSEM8AghWEktE65solkuEgyEEAu9LePLdvXmN
      xvYeKuUStl7CE4oTcIEpufB5XBSyKVRfHZZWxBusQ5F5KeXcKa5dvkR3dxcTC0nqwyEam5so
      l8uUCwXK5SKhWBNN9dGXXcyaGLp5mab9R8gvLRBvbqZSLiOb6ZenALZlUMllSK4kWSqYtMU8
      LC4uoBsGeiFDYmGe+P6jpMfuEm3vw/uS6lVmYYpkxSIabcDIpigCiqqQNE0kUyMzs0C0oREl
      P4XLH6WtueHlFHQHaKiPMTG3QtgLycVpkpk8bU1xLLcfl2VhaiXgNVAAWyNd1LCmRwl5ogzf
      vkNH30GKqfzLU4Dk8grtew/g9gYJ1zfhcUmUcxkM2Yvh8xOuC+MJ+JlKh2io872UMu7v68fl
      UnBNzRKp86OJMNGQH6NSJFu2cGMQbwkQ8PtIzE0Tr/9mTWE2tnYRbTRQZUj6w9TF6wn4fSzM
      zhJpakaVH/UX9Gpi23Di1FlsM8fo0CKHjhzG5XFjuPY+fxCcz+fXvm9wFSTVJnypVMLv92+x
      6C8v7VeR3Sbvo+yE/M9tAR7M4CTmphifWUCWZXzhGG/07XvMX9jz0thuhBC7apnFbpP3UXZC
      /ppngRrbuuhubWB0ZIL9vXtrrvwODq8ym5oGtQR86713+ebMczjsdjalAPNzc/z6b/6WBx5n
      hRBYloUQAtu2EcKuugMV4oluUB0cXjVqngXKzE7Sc+wtYtFGHqwy18sFRgYHUcL1lIslIn6F
      iq0ScguEp47O1sYdV4bdpmi7Td5H2W75a1YAXzjAF5cuYAuJ7r7eamFsm3BzJxgVPCE/kgw+
      GzKZZerbG9ZaBsuytrXQD9jJtF9Fdpu8j7IT8tesAJ5wA+9+O0pidg4TUABJljErRVpaW8kX
      yoR9CppQae9ox7IsJFlGURRUdWdeN8iyvGNpv4rsNnkfZSfk39QY4PpXX/L//eI3PNBBjz/E
      3r178ft8NDXE8AXriIQCuN1ufD6fM1Pk8EojLGtzb4Jb2xo5LMLOPmuH1xohBOWpJRZ/fXFz
      LUCplGfk3gj2TpXMwWGHMUsVFv7uC5Kf36T9Jx9spgUwuHplmIbGuLNpw+G1Q9iC3O37rHx+
      i/p3Bwj1dyNJ0mYUwMWJN/sZncjgGNtweF0QQlCZXWbpt5fx1Efo+pc/RPE9fJW7qTGA5PJS
      WFnGwrG35PCKI0DP5En89jK2ZtD8o7N4G6M8OjOzqS7QlS+vEoh8s5b8OnyzEEJgpPOsfHGH
      ysIKDR8cJ7C39amrl2tWgMJyghNvn2ZwdN6xpeLwyiGEQFtKk/z0Bma+TPxbh2n+0Rkk+dnz
      PDXXZWFZ3BmeorezFWszJzo47DBWRWfxlxewCmXq3z2Gr6up5v0qNdfjUHMnf/iDGKMjOdyr
      HSmjUmRyPknEpzC3kicWUClbKtGQB92SaW9t3ppEDg41sDaf/6uLxL91mPCRPTVX/Ads6kF+
      7/Z9rn91nfYD/wI/Ei5vgKAvR8UwiIcCWBL4ZJgdH6P94JtYloVlWZimualC1Ypt2zuW9qvI
      bpP3UdbLb+bLJM9dxS5ptPzTd3FFg1taJ1SzAhiVImBx+Oy3eOBKTSvlSaVSNDc3ky2UifpU
      yrZK75ETGIaOrPidtUDbyG6T91FkWUYybVbO36YwPEP9u8cIHeza9FN/PbWPAWyB2xdidmiU
      Awf34qO6Fqi/vx+AeLwa7zWwEeDwGmKb1ad75toIashP97/+MbL64m+kalaA5cVZZucTRNva
      yCwl8DY3OYvdHHYcq6yR+vIupeklIn/8FvGzb2xr+jUrQFNbJ8lsCc3UUT1+p/I77BhCCMxc
      kfSlQYr354mcOEDHf/ddCuXStudVswKoHj/tHZ3MTE0TiwS3vSAODsKyKIzMkrk2glXSiJ7q
      o/794w+7OuVnn19THkJQKZdZTiwxMzW1uVmg1NIcCwtJ+sBZD+SwbdimRWFkhpXPb+Frq6fh
      wxN4GqMvNLiFh5V9JbnMwvw8C3OzJJeXUWSFhqYmOrq6NqcAllWgUsRZDerwwgjLojybJHtz
      jMpcEl97A+3/7H1cW+xdCCHQNI1UMsns9BSzMzOkUylUVaW+vp7m1jZOnD5DfUMjbrd7Tbk2
      pQDhSANle9kxi+KwZcx8ifTlIQqjs3gaItQd3UvT75/Z9IyOEIJyqcTszDST9++zOD8PQDQe
      p62jg7e/8w6x+npcrmcv29yUAiwtJtELWSrA7jXQ57AZHgxoCyOzFEZmMAsVom/20vUXP0D2
      1Lam+IH5HYDxsVHu3rrJynISSZJo6+hkX28v337/A7xe74ZukxACw9LRTA3D1ikbJUpGiZJZ
      xLAqaFZpcwrgdltomvx6OxVw2HGEbaOn8hRHZ8kPTYMQBHs7aPzeSdzx8FMXqJmmSaVSIZ/L
      kkwsszA/RzKxRLlUJhQO8b0f/QFer4/DJwYIRcO4vC4ylTQFI89I4Q65VJaiUUC3NQpallI5
      i6lVEHoFuVjBVxF4DQmPIfDoNm5zExtihG3R0NbLoX77qSdNjY9QtlQiATeGUOloc9YCfVMR
      to0wbWzDwCppaIk0lYUU2mIKM19CCfrw72sl/sNTyCEvtrDRhE2pmMEwdUrFAiupJKlskmwx
      QzafJlfMUqoUUdwKwUiIUH2YUFeIsM+PatmAzVTpMiPJ64jhAi5Lw2PbeAwbV8XEXbEI6BIx
      G9zYKNgoioQqAS6BrQosFWyfQAQEtrSJLlBy7C6lhv2E/T4MnnyipHrwyTA/M0HbgeNYloVt
      23x14Uumxscfi98db+FQUycLapK77gkaLMHRcm1rXaTYHqy6QxRu/hWyWXl6RCEQW9rELKDG
      3c/bMSlgP2LwSax9iuqPQAOi/X2yN/4GCotI4rG9HVSTsAETAYjVGLYkVX9JgLSuvKtfDGxM
      FG563saQ3Ny6O42mr7sPq/HE+gyFjW1YWJqOvS6upCooYT9oRexbQxjXb2OZJpZtYQsbgUCS
      JSRZQjzorggJCK/+AQZQkGAWhLCRhEZQ0jn+E5P7g24uD7UhRFVSIaSqnKvCSZKMJMmADJKE
      hAxS9U+SZCRZQZFAopp/zT7ChGVw/epVlGCMIwf3P3GKKruSoGyrhANeDNMkHA5TyOdxqSq6
      rj8WX5VlPIoLS7LRZAMZgbfW2iS7KVZMAu7qrf6mI5Ap6eB3gySes+hrM7OHYlXJAF3yIySZ
      imayXQbYpKf8kNb9Jz0x8oOwB8cFsmWguD0Y9noz/RtPrEV0BWst3qb8A2wFxz/A9rHb5H2U
      l+of4EVw/ANsD7tN3kd5qf4BHBy+iTgK4LCrcRTAYVez5e1FWinHrTtDAMSa2tnT2coLrl1y
      cPja2XILYNoSHe1NSKqbunBgO8vk4PC1seUWIBAMUcqlyKVTiO5u5hcTyFapahUi7EfXTZqa
      GrezrA4O284L7bBeSCyTnBzCfOs9ZG0RSyi4JMH4vZt0Hj7rWIXYZnabvI+yE/JvWQGMQoJI
      817efMuNVVhhJbFCQ0MY3VLZ1z+AVskhhxscqxDbyG6T91F2Qv4tpybJCoN3biJbOmcPHKa9
      0bEZ6vD6salB8P3RMX7+139DRQhUf5zvffAO335rgF3st83hNWdTCiCbeXRXYG0h0fj4GF98
      8jHGN38tmsM3DQHpq8O1d4G0Yo6bg+O0NneuaU2dV8ZT106NG3scHF4JhG2T+O0VjGyx9hZA
      9XhoqG9EsUwejMMXllYYu3uBgrZDJXVw2Gasis7sX51Ddqu0/Tfv1N4CKKqCMCpk8T70DiPL
      HOw/ittZUOHwGqBnCsz9v+eIvX2Y8Bs9SJK0mTGAij/sYuT6IMZqSLmQJaOBf/fOzDm8JpQm
      F5n5f35L0w/fWqv8sMlBcFtrB0dOH19rAVz+MAujN8gbzzzNweGlIWxB8rObJP7xKh1//j38
      HY0bdjNuSgHS6QRDt4bXPMUrksSxgTfXEllenGNmfolCoUgmk94mERwctoatm8z99UdYxQqd
      f/F93E8wulVz56WUWmByvkjb3uaqWURbJ5cvsJIpc2TVYUAul8MViDFy+wodh05j27azFGIb
      2W3yPspm5DfzJRb+y6eEB/ZRN7AfG4H9hHNrVoDscgrZ48ZYSlMG1OQEs4tpWhsiJMrQ4odQ
      MEiyUKBjzwEq+TRSXYuzFGIb2W3yPkot8gtbkLk6TPqrQZp+/wz+7uZn2hit2SrE4zkJiqUy
      S4vz9OzZ+9RM8vn8ju1jzeVyhMPhHUn7VWS3yfsoz5NfW86w+PPzeFriNHxwAqWGF1Rbf5xI
      ErlchrnxURo79xJ0XoY5vCSEZZP87CaF0Vmaf/gW3tb49nuJfBTbMkkvL2BJLkxnKYTDS0AI
      QXkmwdLfXyLY20n3v/x9JGVzRna3rgBGBUOoCL2I4SyGc/gaEabF8kfXKIzM4mmK0vKH38LT
      tDV/Ai/QAhhks1mkYCN1HoEQkrMn2GHHMbIF5v76E4J9nfT8mz8ARd5SxRdCkM2kt64AxVIZ
      j8cDQnDv3ihH+3u3mpSDwzMRQmCk8uCCwugcjd87ia+zcVMV37ZtFhfmmZ2eZnZ6ipXlJOG6
      uheYBaoWDSF4ZkGcWaDtYzfJKyyb8uwy+cEpCqOz+NobCL53hHCkrrbzhSC9ssLkxDhjw8Ok
      UymaWlqINEVRoy4yUobp9MSL7QmuWuN9sRQcHKC6SrM0uUhxbI7KfBJbN/G21RPq66Thg+NI
      qrLBTu0DDzHZTIbFhXlmpqZIZZIUjSLZSppUOYUmV5ADbjyRCLR4uZAbR8q6Cbrr6I520Bk9
      +qItwEbGRwYp2SoRr4ypBuhub3ZagG3kdZFXCIGwBbZhYusGtl79FJqBVaxgpPMYmQJGtoCW
      LZIvFChUyni6GvDta8Hb1oDkURESCGFRrOTRTJ2+pgMMJUa5OnGdheQcZaOMUCRwAS4JIctI
      uJBkGUWWUWQFVQW3ouNd/ZPRkDFxCRtV2NurAJOTkwhbkE0t0dR9kMZokEKhwK1rVxkZHHws
      /v6GNo617mXOtcw13zBNpuB0ucaVdfV9mPVvIo/+NYr5dP+ZQogtWk/fhH+ArWaxIQ3xxDTE
      g/SDjSh7/wgx/DOkfNUflvxIRMEDU/HGE/wDgCQ9noMAdFH1D3DZ9110PFy+Pk65Yj4W74lI
      G2NJj8ZdrV6Pni/WzpWe6LOgeuhh4h6Xzf/xk9/jF1/d4fJQ4pECrDOPvsGXgbSavfTQ34IA
      1+p9FbzIm+AnUMqlKQsXQa8Ly7Lw+f0UnBZg29ht8j7KTsj/3DHApvwDSCpuSaw5wyjk85RK
      Ve/etm0jy/KmP4UQCCGQJGnDpyzLlMtlJEnactpPyuuJYm1jHi+S11blfd4z7uuU70XyrEX+
      R+uJJEnPPOdr8w+wEwrwwF78blGArcr7TVGAWuTfrAIoP/3pT39aUy3eIrqu43HJjI2OUSpX
      WJidxBtpxqtKIARzM5OkciXmpsfxBqN4Pa6H4dk0c9PzSC4vQb+XlcQC0/PLiOIyhrce2dLw
      eDzk00mGx2dpbmpYu7gAlpbl1r0JYvX1qLK0Fi5sk6F7d7FkD6GAby08s7xIXrfILU0h/A14
      1eo55WKOhUSKoFdm8P4MjfWxanghx8JyCq2Q4f7UPM1NDUiShGVUGBsZpVAsMDu3SKy+AVWW
      QNhMTY6TzRdZmp8FT4CAt+q0eXlxjvlEikxyEcnlx+d1U8imuH9/ikIxRypXIuDz4PF40Ep5
      hsfuE66L41IfvgiShM7tW4ME6qJ4XOrDcAnujwxSqNhE6kJrlSI5P01FcpOYHcdb14BLrl67
      Yi7DciqHWzIZm1miIRZBkiRMvczE9AKyrTM4MkZ9YxOqIoNtMnH/PtlcjpmZWQKRGB6XgiRJ
      LM5Nk0hlyK4sUzQEdaEAkiSRWUkwMT1PqZihYkAo4EeSJLRynrHhMXLlIslkmlgshixX5dC0
      6v22DY2x0SEkdxi/17VOTomRwTvI7gB+n2dNToCZyTES6QL1seha3Fx65Wsyjy6rBAI+YtEI
      /lAc/4OFcxL4/H7C4SCKrFAqlzeGB4Poho6mVwfGfr8fwzSJR+s2LL9we7zEopHHshWWQJZt
      Ktoj68CFja4b6PrGAXddNIawLeKxOsx1419fIIxblbh39y6pdHptaOwLhnErEvUNDdTHHxoG
      kxUXgVAQgUxXU5iCtnqGJBHw+4jE4rgVCXudryuv10ck7CeTK5PN5apyuT2EolG8bhcryeRa
      XNXtJhyqw+3aePuELVBcEqXyo1YKBLphoukbw6ORKLYtiEXC2OvkDYQjKJLNvXuDpFMrawNI
      1e0j4HMTidVTH6/HpUgPBMYf8CHJEns6msiWHvqD8/l81EVi+LwuLOuhvB6Pl7pohHw2S25V
      XgCX6iYQiRD2ecimVzCsx1sSxaXi94cJ+N2PH1NkSqXHJ0UM3UDTtA2D8XA0/qLvAZ6Poihg
      llnJlLAsKFcqGKaN4pJBQCqVIlAXQ3V58HpWd9asCw8G/AQCPqA6Hgn4/SwmcxgelWC0apU6
      l81QKpnYbJwZsSUVj0vF494opiQrBIKBtXQfsJJcJl3U0SQd4XMR91UrdTGXZk1C/EoAABcX
      SURBVGUlRd+RNykV82t5FLMpVlJp/F4fjc0Na+kYWpFsrkhjYz3zmQIHGlbPsC1W0lnCtoSO
      THxduTKZNMIVoLkxiuqrliuXy1IpVQgHfbS1ta2thS/nchRKZUzbRpEfLv6ykXCrKl7voxVD
      Ihjwo/o37ohKplbIWwqyVsBreQk0Vp+OuXSSlXSWo2+eIZ/Lrs2xGJUiK8kkPp+PeGPTw4Qs
      nZV0nsbGBmaWUuw98PBapNNpVG8QrWxQF/eshWezGcqaTWNTMxXr4V0rFvMUi0V83hj1TW24
      1YczPA/k10tFcsUSdYaJ17V+8ZuNqrjwej08SiAYRLE31oP08uL2zgI5OLxuOAZNHHY1jgI4
      7GqeqQCTI3f56vIVZhaWtzXTi+cvAKCnpvjZbz7ls08/Ja89bVOByexM9c3nhYvnn5t2dnaQ
      v//oCiZw+/p1dCA1dZupVJkLn3/K5a8ukS1VB78jd29y+coVFpYzNZV7ZnYagOXl7bkeVy9c
      5Bk+7h2+Bp45CJ6YX+a9d98FYOTeLRaXkhx78ziXr9ymo7sbj1lgMZ0l2thJfnEc2x3m+PEj
      KMLg+pUbZHWbI+1+bs6bYFY480YPl+9NsrSY5Axg60UaO3s521vHJ+cvE/UJCmWNw6e+zczg
      NRJZncN9LXz88UW++8MfMj81zmelIocG3uTmjbt0dHdzoKeDhekxphZTePxhyhNXscKHAchl
      MtiAXsxR9GgkEhne/8EPCPldgMX8cpZ33/0OYHHh80+xBBw7M8D0cJoAKUI9XVz49CYeFxwZ
      6OXjjz/iw+//IenFZUqZ5JNl11P88nc3CPhkTp85weXLN3D7g7R63cybJfr2vUHEB5+fv8z8
      3BL9pwa4eu02JVNQ55boHXiTezevMzAwsKM33qHKs7tAa8Njm1QqjSguMpsVuJXqa+nBkRFU
      xcXC7Aw+n5dKIYtuCsxyjlzFZHJ6Gr2Yo/vgAD7V5vrdMc6+fYaO5if7EhgZG8HrEkzcn2Al
      VyEzOY2ruZX9+3tpjtfR2rWHIz1xEkVprQwA41NLnDl1ilImRUtrC/1Hj6IC8uoaEFsIFNnP
      j//o9xm59gmDU6mN4uXnsMJ7OHush1tDM+RyRYq5DLqpE2vupjXgw93Qyv79+2ltiD5Tdmyd
      eHMPAz0hPvnkAiXZx+LiAvlciu6+AaIhH4nR67T0n2V/TwdaMUNRt5ianqR3XysXz5+naOxe
      yw9fN89UgK7W+rUukKbpeENR3JKFz+9Dq2gcPHAA2xZ0dXchKyrCNNAtgW0amDbEY1HcgTBe
      FcLhMP37O/niiwvkK9UuiOwOkJge5ssLVzl55iQH9h1AcofpbAqhmzbheAwVN3o5xdJKlnA4
      jOoNbigDwJ6uJi5+9RX+SKz6Mm21/hw71stXX1xkJCmxN2Zz5cp1LNlHLOIHFFrrQ9UuUCWA
      khvnyxuTHOnbR7k4z2wyi1t1Ew56CYTDqIBVKbOwnCYcDj9VdoCJ0UFuTld4/91TBNDp6Owi
      FI4T8lULVt/Tz9TNL0ik8whDx7IhFovhqWtleXKUYwNv7MzddngMZxp0u9FT3J3Q6O9t2fSp
      +XSCwYklTh0/vAMFc3gSjgI47GqcaVCHXc1TR1umaVIub1xTIaobgDfugXgGpmnualN+Dq8+
      m+oCzc7M0tbRXrMC7OR2SAeH7WBTXSCv17tT5XBweCnUrADZVILxydmdLIuDw9dOzQpw6+IX
      ZE3HBorDN4uaFcDQFGJR3/MjOji8Jgjbrm1DjF4uo/gkFhdXoG/1ZCFWTU6Itd+SLFcHyAIk
      2WktHF49hBCUCznuX/uSmcGbtSmAsG180XrcPNxpU8ilWcmWMMs5dNwILYevzk85LdG8p51Y
      yL+2od3B4VWglMtw86NfkEsm2HfiLN/9y/+1NgWwzDJTU7N07Du0FuYPhknniihuLx4BkhpG
      sjWyuRIdqgvbttf+HBxeJrZlce/Lf2R26CZH3/8xzXv61jbL16QA/rp6okEvXs/DvabFXAbL
      lmiqj2FKHqxKHl9dlLY2Gcs2UBQ3iqJU9wQ7OLwEhBCkFma4/Kv/TOv+fn7wr/535EfqY82v
      aXv27qUsHp4cjtYTjq6LEFw/QHYqvcPLpVLMc+PczylmUrz1R39OXUPzE+Ntap3C+Pg4/X17
      t6WADg47gWWajF75nPvXL/LGd75P56FjzzTfX7MCJOan8ASfvJHFweFlI4RgbuQOtz75Fe29
      R/i9/+F/Q3U9bjfoUWpWAN12IdtPt8Ls4PCyEEJw5/N/YGV2kvf+7N/iC9XmRANqVICxkVHe
      /s47DI+Ob7mQDg7bibBtVhamSc1Ps3B/CF8wzHf+2b96bJD7PGpSgIBH8Nln5/HHGp4f2cFh
      BxFCsDgxzJ3PfoPHH6K55wAH33qfhs6nO2t/FjUpQEvXAVz48La31rwU2sFhuzG0Ctd++zNK
      +SxnfvzPCcXqNzjR2Ao1jwEm7t9g9PooP/mj9zcoQSqxQMlWcdsV/NE4CgqWbREM+F+oYA4O
      DxC2zczQTW5/9ht6T73LqYEzW3raP4maFGB+aoyp5RJ7evc8diyxnCDa1Em5YFFammB6PM/J
      b5/Esiwsy8I0zSek6ODwfISwSUyOce/8b/HXxXnnJ/8WbyCIZW2fZ/aaFCBUF+PkmTOM3p98
      7FgkEmEpkUAxiwRiYVpb/eTzRRpjYRRFcbZEOmwa27aYG7nL4JfnCEbjnP7xnxGKNWzbU389
      NW2JvD98D1w+IpE6LBsa62M1Je5siXTYDEIIlmfGuXHu59TVN9P/re8SjO7su6eaHs+NTY0M
      j46TzeboO3To+Sc4OGwC27ZYnplg8Pw/IikKp3/0E+rqm154gFsLtXWBIvVE/ZMML5YZ8Lie
      f4KDQw1UigWGLn3M4v0hgtF6jr7/IyJNbTvS1XkaNXfQs9kSnd2dO1kWh12AEIJKMc/0vevc
      v3aBA6fe4f0//3e4vTu329AWAs00yJTLpIoFcqUcpXKeUjFbuwLcvzlI4IiL/r3dO1ZQh28o
      QlDIppi8fYW50bvIskLznl4+/Iv/ZVsrvhAC07YxLZNsLkk+OUFleQw9NYHIL+IxC3isCs2K
      C9XtQ3YHaleAo28PMLz4qPM1B4en82D74d3Pf0t6aZa9x87wzn/7r/E+4qtssxiWhWYaVLQS
      2ewyhfQcemYGMztHMD+DKCyS0ixW5CALUgQt0EJW7ccKhHH5IigoqAIUq8Y9wQCp5WWi9Y+/
      B3BwWI8Qgkohx9S968yN3MHQKvSefocT3/9TZPn5NhhsITAsC9000UwTrZKnXMzgKS+jZqew
      M1PklsehkkNCUJbclFx1lD1xyp44U/XvI3U2EfME2ef2clr1EEDGYwGagV4qUzAMNF3HEEbt
      CpBOpDGV9FOPl0sFXB4fEhJC2M78/y7CskzKuQwL40PMDN7C1DU6Dx3j9I//jEBddM1pdUnX
      yVXKLORyJPI5yuU8eqWAXcmilleglMRdThLWU/itAn6rgkd2EVC9KL56PA19GJGjRFvep2ir
      6EKg2hXILyNsHdsoImmL6MVJJmyNIVunaGqUTQ1NstGEja2bCAFCkkFWansPkMtmKWYS3JlM
      8uE7bz1hPZBgePAuLp9CJmGy59B+IkGv8x7g60QInnUjBWKdRxDB2k8hqkcfWPhYM2SwGmft
      +MNPrVyikE6SXppjeWac7PICitdPtKmZlq4OQgEPWilDPp+iWMpSLBWoVEqYmoYwdfxCx08F
      l9BRZYFQvBiyB0OSKLiCGEqAsuyiLEnoQqcsKhTtCkW7jGxbuCQbRQYvCh7hwosbtyuAS/Wj
      qG4k1YPiDaIoKi4hUCRQJRlZkpFW/6myiSSs2lqAydFBQo3tqDz9FbQkyav3wUYIgWVZ1Yul
      aWv7gi3L2vi9WET96uJjaVn+KCLUuOEG8czbu5F11lqefrz2lCjrOn977eMX3uD/1HzXPYOe
      VPb1VfutWJy+UPBh2Oq5j/0W9lqyQnponUMA90MVrjVVvesI60FlF5yoCLp1gRD2I5XfBiGq
      8q8qWl5T+feDrdjCA3RDHlgWcHea9XdMEEAI/2qZqudKsFoNWf22ivTgGBv+l1j3nyTWwmVJ
      qj7NH7+gq/HXLcORrIepSmLt2tTUAgjLYHZunmhDM0Hf406IAYqFHG5fAElICGHhcrme3wI8
      J2uxPs6mzKs8Pe7zlONpadSW+1Ni1XDywwr8nOhrFXzjQ2HtCb9OAdanLNZ+PZqetBq6WuGk
      hxHFWs0USE+raBt4wvz9VqziPOkcCXTTRFWqT3IA2SojFO+GfJ9fme3qn1J99j9VAZ5kHn2z
      lEol/H5nVajDq8uOeohxxgAOrzpbmqox9QrjE5MISaVnzx7cqkwhl8Xt8yNLMkLYuFzOkgmH
      V58tKcDi4gIeX4Bw0Mfi4hKd7S2MjQ4RjIfJLursO9xHSHEswzm8+mzJR1h7Zw96bpFf/uOX
      dLS1ADYICcu0kGR5WzcsODjsJFt+W2VJKl2tTau/ZA4cPIjq8aL0KNjCRpbltT8Hh1cNIQTj
      Ny5tdQygoxezaOLhANcfePhdcZxPOrzCWIbB9XM/p5RLb62m3rt7k33HvkVI1be7bA4OO0pu
      JcHv/uP/SaAuyrf+yV9urQU4dOgQ165fIdrUtt3lc3DYMRYnRrj6D/+VMz/+M2KtnUiStLUW
      QPUE6D/8BkYxuxY2eOcmqewSY0OTJDOFbSu0g8MLIwRj177k1se/4r1//j8Rb+vanH8AgKFr
      XzC0BH/4g28hAbcvnWMiG6T/jerxQiGPvKywOJendU+HYxbF4ZVACMGtT35FMZ3knZ/8jygu
      94Y6Wft+gHSeSLRp7XcllyIQ6Vj73d3dg+oP0tnmw9QrKMGAYxbF4aViGjqXfv5XeAMhvvWn
      f/lEu6E11c708iLzyRz7mqobYmxTp23vUSg87EE1NK8fDzzfLLWDw05SKRb47K//A92HT7L/
      xNtP3WhfkwJ4vF6aWlrRK9XFcZZRIV0ykJ2XvA6vIKVsmk//83/gyHs/onXfwWdamahpEKwo
      CsVcGqGsru+xbSbGx5Fkp3vj8GqRW0nw8X/695z4/p8+t/JDrS2AP4S+vMSEEuIU/bgCEdqa
      43h93rU46eU5SpaEaqmoQT/xuhfb+OzgsFlSi7Nc+Nl/5K0//u+JNbXVZFir5kf43iMD2Ou8
      4qmSzeTMPCeO9INtMjY+iTcYYGm2yLvfO+vMAjl8rSyOD3Hzo19w9k//klCsAbPG9Wg1K8DM
      yAhGazdv7K86yWtt72FpaLJ6UFJ448hR8vkCHS1+spk88ahjHNfh62H06nkmb1/hgz//d3gD
      m9t/UlPtnBi+g7upmYD3YZenXCoQia0aLpUkfL4gPp/T7XH4eskkFrh/7QIf/sX/XJNTvEep
      SQGymSyqqpLP5NbC8sUSumMny+ElIoTgyt//F07+8J9uqfJDjQpw7PTbG37fu3OLY6fe5u7t
      21vK1MHhRRGryxtC8UZiLR3PP+EpbKmD3tXWxPnPP8cfaVwLm5kcwxOqw6f6sCSJSDiw5UI5
      ODwN27YZu/oF929cJBCOcuYP/vkLWZPe8qb4wtIYabWdjnh1XJBLJylbJe5cm+WdD99CEjb5
      fJ5g0BkXOGwPqYUZrv/2b4m393Do7Ie4fS9ucWTLUzTXb93gztwN/s2/+CdIEoyPj9PS1U7v
      gW5SmbzjIslhW7Ati8T0fQYvnEMIOP3jn1DX0LJtPgS21AKsLM5wd/g+8ZZuDu3vfur7Bscs
      isNWKaST3PvyHInp+zS097Dv+NvEWju21XmG0EtbUwCtXCJfLHHj5i0+eP99RwEcXhjbssgs
      zbEwPsTs8B1kReHQ2Q9p2XfwqfvKhRCYWgVLK+MJRx9TDiFsRG4BOzWOnZtH5BewCwlEMYGw
      TCTVszUFuH3lPFnDRVN9FMUTYE9n6xPjOQrg8DRsy2J+7B7T966TXV7Eti0ijW009xyg7UA/
      Hn/wsQqdnZ1AIAi3dFFaWSQ5eheXz4+VnSMa9eGRytjZWUR2FruSwSpr6CKCpjZT8TdiqFE0
      pQ7DFUZHoqSXt6YAtm0yfPcOhuKnv28/iiwxOngbfzSCpLtw1wWprws6CrDLEUKgV8oU0kny
      KwlyK0vkVhIUUklMQ6d5Ty/db7xJtLkNWVGf2L0RQmAZJrn5CXJzM3hEDmv6U8xKDk84ipWb
      o6QZJDwBMiJIyR0m5Q1R1sEQOjm5QsUo4hYWQlWxVRVTljEkkHFvl2lEwezMLEIUGB5M8e53
      zyIJm2KxiMfjebp1aE1DnRx/LDXbHUR4QxstH29T169qP3ZzO0F1y+Da5BDPNkD+9bA/GKDJ
      8/CNfNVa8wNTx+siiup1k9YHroYt+Qym60oP7Q2vfunRbeot1l331e+rJtOFWDV0ZtvkDZlz
      sxEs20bYNvDQKriu6xiahlbKYxr6moFvIUl4/EFcPj9IAlvY2NhIq2kLYWMLG0vYWMLCFCa6
      ZVK2NExhgSTQ0KnYGiDT5faRMHXMVTlUSUJFRkZGQcYte1DVIIoaQJUUJMSqtWmBkCQQYuuz
      QBuRsM0K/mgjp850kM3miUWqT36P56E16fUzQqqqgixD/HE/sJLiBpe3evFtG4SFsGtYVPfA
      pPfDO/ukKNh2DQulxMPNDpJk0xANYtdk5fnpgeJpMR6pcNbjJpzXvpkudXUf0qrJ81VT3wJ7
      QzzxoOJLq6GSWAs3hYRHc7NRbyR0GwpCQqxXdWn1LKmqPGJ1U5Xtkmhp9K3albY2GjN/8CR/
      uj345zxKpHVle3htNNPEJT+w8w+YJVB9PNUqtbT+x+o320bYFopaXdr/WliHFkJs2+j/VU4L
      eGXL9k1N67WwDr2+6/RNTUusdjO2y5Leqyrnq5bWa/GWarsu2KucliRJ2zrH/arK+aql9Ura
      MDRLecqPdNNL+QxDQyOkU0mmZhdqTsu2LIYH71KsVK3YFfJ5ACr5FIMj489w+vQ4s1PjLCWr
      jgLzq+kI22JiagrTKDN4bwjNqC3F5NI8kzPzABhakYpe7cPPTt5nIbHM2PAQ2ULtXdDZmRlM
      vcL03MZro5VyjN2fotbt2wuz0ximxuT0/IZwvVxgdiFBIbvCxCPHnkYmsUC+YjA5ObkhXJg6
      oyNDpFJphkfHsWoZXK2SWJhHMzdKY5bz3BsaxdiEJfJMYp6CXqOPsK8bs1xgbjnFzGyCroYg
      eML0dDQT8KaZnZ/H66+rOS1hWxRLJeYnR5hKFGiLevHWNVKnWtirvrBqnWEqFPOEVRd//6sL
      tHZ1o0oyff19eN1uzEqRimHXNFCGVTtKniBffPw7wg1NmLrM/oP7iURjFCsVCmWN2CZuaKWQ
      YULTMS2TT8/dpr17H5I3gFRKYwoFyxLIyvMF1cp5JsZ1NAGXPv9Hwi17cMku9u3pQMnkmZ9P
      ILkC2ALk5yRnGAYrc5MspooYxWuUZB+KKXGwv5dYJMzSwhwWLgzbRpFre5pXKjkqSzL55BJu
      nx/J46Mp4MK0rE150cpVKrC49Oq1AEJYTC2soGITj4SIxBupC3pJLsySqxjEo3E0rXabpJIk
      07N3P6FgiJ6udtxuN5Is4Q4EkIwKxiYsWzQ2t9MQC9Pe1UMk6EeSZIRlsLQwT6Zo4nWDYdS2
      BTQUraeztYl4YwsNsQiKKiFJMDk5iSXkqqfFTcgZbWjGtgVhn4tYfT1CkmlrbiIej2OZZs1P
      2XCsCbBpCLkJRhvAgvbWFirFHPPzCwTCdRiGXpOiu7wBhICO1iYk1Yffo9LS2g56nqm5JJFY
      HFkYGGZtZRNWmXTOQNMKaJqOrLhob2vB5fPhEiZ6jekgTHLpPCWt8noMgh0cNmKjaRYez4t7
      IXolu0AODs9GxuPZns7LK9cFcnD4Ovn/AYnsCmUu+IvEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Records of US cases and deaths per day' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
